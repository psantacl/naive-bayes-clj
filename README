# bayesian-classifier

An agent based naive bayesian classifier supporting both traditional classification and Paul Graham's variant outlined in "A Plan for Spam"

## Usage

make-classifier accepts N category names as keywords and returns a classifer agent:
(def *healthy-sick-classifier* (make-classifier :healthy :sick))

Next, you'll want to give it some training data:
(send *healthy-sick-classifier* learn "fred" :sick)
(send *healthy-sick-classifier* learn "juan" :healthy)

Note that attempting to learn about a token in a undefined class will result in an agent error.  This is preferable to silently failing, I believe.
Another possibility would be to allow users to generate new classes on the fly via the learn method but it is my belief that this approach
is entirely too lenient on typos.

Use one of the support methods to categorize new data:
(p-of-class-given-token *healthy-sick-classifier* "betty")
(p-of-class-given-token-graham *healthy-sick-classifier* "mary")

Persisting trained classifiers is trivial:
(save-classifier *healthy-sick-classifer* "chicken.txt")
(load-classifier "chicken.txt")

## Installation

Typical leiningen project rules apply.

## License

Copyright (C) 2010 Do What Thou Wilt Shall Be The Whole Of The Law.

